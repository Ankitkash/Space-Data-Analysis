# -*- coding: utf-8 -*-
"""VOIS_AICTE_INTERNSHIP_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FEJmS8w3ZK9ZACvutaMbuWobiucUX-90
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_excel("space.xlsx")

df.head()

df.tail()

df.index

df.shape

df.columns

print("No. of Rows: ", df.shape[0])

print("No. of Columns: ", df.shape[1])

"""# Null Report"""

df.isnull().sum()

df[df['Time'].isnull()]

df[df['Price'].isnull()]

df['Price'] = df['Price'].fillna(df['Price'].mean())

df['Time'] = df['Time'].ffill()

df[df['Price'].isnull()]

df[df['Time'].isnull()]

df.isnull().sum()

"""# Note: All Nulls have been imputed / replaced with proper values"""

df.head()

df1 = df.drop_duplicates()

df1.shape

df.shape

print("No. of Duplicates: ", df.shape[0] - df1.shape[0])

"""# Note: Duplicates have been removed"""

df1.columns

df1.dtypes

"""# Feature Engineering"""

df1.columns

df1['Year'] = df1['Date'].dt.year

df1.head()

df1['Month'] = df1['Date'].dt.month

df1.head()

df.columns

df1.head(2)

df1['Month_Name'] = df1['Date'].dt.month_name()

df1.head()

df1['Day'] = df['Date'].dt.day

df1.head()

df1['Day_Name'] = df1['Date'].dt.day_name()

df1.head()

df1['country'] = df1['Location'].str.split(',').str[-1]

df1.head()

"""# Outliers Treatment"""

df1.columns

df1.dtypes

sns.boxplot(y = 'Price', data = df1)

plt.figure(figsize = (10, 5))
sns.boxplot(y = 'Price', data = df1)
plt.show()

df1['Price'].describe()

"""# Removal of Outliers"""

def remove_outliers(col_name):
  sorted(col_name)
  Q1, Q3 = col_name.quantile([0.25, 0.75])
  IQR = Q3 - Q1
  lower = Q1 - 1.5 * IQR
  upper = Q3 + 1.5 * IQR
  return lower, upper

"""# Analysis / Visualization"""

df1['country'].value_counts()

df1['Day_Name'].value_counts().sort_values(ascending=False)

df1.columns

df1['Month_Name'].value_counts().sort_values(ascending=False)

df1['Year'].value_counts().sort_values(ascending=False)

df1.groupby(['Month_Name'])['Price'].sum().sort_values(ascending=False)

plt.figure(figsize = (10,10))
df1.groupby(['Year'])['Price'].sum().sort_values(ascending=False).plot(kind = 'bar')
plt.xticks(rotation = 90)

funds_year = df1.groupby(['Year'])['Price'].sum()
print(funds_year)

print("Which year having max funds : ", funds_year.idxmax())

print('How much max found : ', funds_year.max())

plt.figure(figsize = (10, 10))
df1.groupby(['Month_Name'])['Price'].sum().plot(kind = 'line')
plt.show()

plt.figure(figsize=(10,10))
sns.countplot(x = 'country', data = df1)
plt.xticks(rotation = 90)
plt.show()

plt.figure(figsize = (10, 10))
df1['MissionStatus'].value_counts().plot(kind = 'pie', autopct = '%1.1f%%')

plt.figure(figsize = (10,10))
df1.groupby(['RocketStatus'])['Price'].mean().plot(kind = 'bar')
plt.show()

plt.figure(figsize = (10,10))
df1['Month_Name'].value_counts().sort_index().plot(kind = 'bar')
plt.show()

# Create a pivot table for the heatmap
monthly_missions = df1.pivot_table(index = 'Month_Name', columns = 'country', aggfunc = 'size', fill_value=0)

plt.figure(figsize=(10,10))
sns.heatmap(monthly_missions, annot=True, cmap='Blues', cbar=True)
plt.title('Monthly Mission Count by country')
plt.show()

monthly_missions

